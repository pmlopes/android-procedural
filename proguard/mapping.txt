com.jetdrone.and2d.Game -> com.jetdrone.and2d.b:
    com.jetdrone.and2d.gfx.Spaceship ship -> a
    com.jetdrone.and2d.gfx.ParticleHandler particles -> b
    android.app.Activity activity -> c
    com.jetdrone.and2d.sfx.SFXR sfx -> d
    android.media.AudioTrack snd -> e
    int state -> f
    int mCanvasWidth -> g
    int mCanvasHeight -> h
    android.hardware.SensorManager mSensorManager -> i
    float mAccelX -> j
    float mAccelY -> k
    float mSensorBuffer -> l
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void registerListener() -> d
    void unregisterListener() -> e
    void init() -> a
    void updateState() -> b
    void updateDimensions(int,int) -> a
    boolean onTouchEvent(android.view.MotionEvent) -> a
    void updateCanvas(android.graphics.Canvas) -> a
    void finish() -> c
com.jetdrone.and2d.GameLoop -> com.jetdrone.and2d.a:
    void init() -> a
    void updateState() -> b
    void updateDimensions(int,int) -> a
    void updateCanvas(android.graphics.Canvas) -> a
    void finish() -> c
    boolean onTouchEvent(android.view.MotionEvent) -> a
com.jetdrone.and2d.GameThread -> com.jetdrone.and2d.c:
    java.lang.Thread gameLoopThread -> a
    android.view.SurfaceHolder surfaceHolder -> b
    com.jetdrone.and2d.GameLoop game -> c
    int MILLIS_PER_FRAME -> d
    int MAX_FRAME_SKIP -> e
    boolean run -> f
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void run() -> run
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.jetdrone.and2d.RFighter -> com.jetdrone.and2d.RFighter:
    com.jetdrone.and2d.GameThread app -> a
    com.jetdrone.and2d.Game game -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onStop() -> onStop
com.jetdrone.and2d.gfx.Particle -> com.jetdrone.and2d.a.a:
    boolean active -> a
    float lifetime -> b
    float current_lifetime -> c
    float fade_speed -> d
    int px -> e
    int py -> f
    float vx -> g
    float vy -> h
    android.graphics.Paint paint -> i
    int particle_size -> j
    int red_factor -> k
    int green_factor -> l
    int blue_factor -> m
    float rfact -> n
    float gfact -> o
    float bfact -> p
com.jetdrone.and2d.gfx.ParticleHandler -> com.jetdrone.and2d.a.b:
    com.jetdrone.and2d.gfx.Particle[] particles -> a
    java.util.Random rand -> b
    void init(int,int) -> a
    void update() -> a
    void draw(android.graphics.Canvas) -> a
    boolean isActive() -> b
com.jetdrone.and2d.gfx.Spaceship -> com.jetdrone.and2d.a.c:
    int x -> a
    int y -> b
    int hwidth -> c
    int hheight -> d
    int seed -> e
    int[][] grid -> f
    int xscale -> g
    int yscale -> h
    int xmargin -> i
    int ymargin -> j
    android.graphics.Paint pSolid -> k
    android.graphics.Paint pAvoid -> l
    android.graphics.Paint pCokpt -> m
    void generate() -> a
    void updateX(float,int) -> a
    void updateY(float,int) -> b
com.jetdrone.and2d.sfx.SFXR -> com.jetdrone.and2d.b.a:
    int wave_type -> a
    float p_base_freq -> b
    float p_freq_limit -> c
    float p_freq_ramp -> d
    float p_freq_dramp -> e
    float p_duty -> f
    float p_duty_ramp -> g
    float p_vib_strength -> h
    float p_vib_speed -> i
    float p_vib_delay -> j
    float p_env_attack -> k
    float p_env_sustain -> l
    float p_env_decay -> m
    float p_env_punch -> n
    boolean filter_on -> o
    float p_lpf_resonance -> p
    float p_lpf_freq -> q
    float p_lpf_ramp -> r
    float p_hpf_freq -> s
    float p_hpf_ramp -> t
    float p_pha_offset -> u
    float p_pha_ramp -> v
    float p_repeat_speed -> w
    float p_arp_speed -> x
    float p_arp_mod -> y
    float master_vol -> z
    float sound_vol -> A
    boolean playing_sample -> B
    int phase -> C
    float fperiod -> D
    float fmaxperiod -> E
    float fslide -> F
    float fdslide -> G
    int period -> H
    float square_duty -> I
    float square_slide -> J
    int env_stage -> K
    int env_time -> L
    int[] env_length -> M
    float env_vol -> N
    float fphase -> O
    float fdphase -> P
    int iphase -> Q
    float[] phaser_buffer -> R
    int ipp -> S
    float[] noise_buffer -> T
    float fltp -> U
    float fltdp -> V
    float fltw -> W
    float fltw_d -> X
    float fltdmp -> Y
    float fltphp -> Z
    float flthp -> aa
    float flthp_d -> ab
    float vib_phase -> ac
    float vib_speed -> ad
    float vib_amp -> ae
    int rep_time -> af
    int rep_limit -> ag
    int arp_time -> ah
    int arp_limit -> ai
    float arp_mod -> aj
    java.util.Random rnd -> ak
    float frnd(float) -> a
    float fpow(float,float) -> a
    int rnd(int) -> a
    void resetParams() -> c
    void resetSample(boolean) -> a
    float synthSample() -> a
    void random$13462e() -> b
